[agent]
  # wiki: https://docs.influxdata.com/telegraf/v1/glossary/#flush-interval
  # input interval (how often to fetch current data from reader)
  interval = "${DATA_FETCH_INTERVAL}"
  round_interval = true
  metric_batch_size = 1000
  # if influxdb is not available, save up to 100k entries, until it's reachable again
  metric_buffer_limit = 100000
  collection_jitter = "0s"
  # flush to influxdb every x seconds. Should be higher than input interval
  flush_interval = "${DATA_PUSH_INTERVAL}"
  flush_jitter = "0s"
  precision = ""

  ## Logging configuration:
  debug = true
  quiet = false
  logfile = ""
  hostname = ""

  # we don't care about which container/pc fetched the data. Setting this to false will include a "host" field in the data
  omit_hostname = true

[[inputs.http]]
  # currently, the docker container does not support mdns, so we're using the IP
  urls = ["http://${SMART_METER_READER_IP}/cm?cmnd=Status%2010"]

  method = "GET"
  interval = "1s" 
  data_format = "json_v2"
  
  tagexclude = ["url"]

  [[inputs.http.json_v2]]
    measurement_name = "energy"
    [[inputs.http.json_v2.object]]
      optional = false
      path = "${SMART_METER_DATA_JSON_PATH}"
      tags = ["meter_number"]
      fields = {"E_in" = "E_in", "E_out" = "E_out", "Power" = "Power"}

[[inputs.http]]
  # currently, the docker container does not support mdns, so we're using the IP
  urls = ["https://monitoringapi.solaredge.com/site/${SOLAREDGE_SITE_ID}/currentPowerFlow?api_key=${SOLAREDGE_API_KEY}"]

  method = "GET"
  interval = "5m" 
  data_format = "json_v2"
  
  tagexclude = ["url"]

  [[inputs.http.json_v2]]
    measurement_name = "energy_ems"
    [[inputs.http.json_v2.object]]
      optional = false
      path = "siteCurrentPowerFlow.LOAD"
      fields = {"E_in" = "currentPower"}

      
[[outputs.influxdb_v2]]	
  urls = ["http://${INFLUXDB_ADDRESS}"]
  token = "${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}"
  organization = "${DOCKER_INFLUXDB_INIT_ORG}"
  bucket = "${DOCKER_INFLUXDB_INIT_BUCKET}"

  # don't verify certificate as we're running on our own container
  insecure_skip_verify = true

# for debugging, can uncomment the following lines
# [[outputs.file]]
#   files = ["stdout"]